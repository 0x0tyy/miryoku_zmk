// generated from miryoku_zmk.org  -*- buffer-read-only: t -*-

//#include <behaviors.dtsi>
//#include <dt-bindings/zmk/keys.h>
//#include <dt-bindings/zmk/bt.h>

#define MIRYOKU_SUBMAP(\
      K00,  K01,  K02,  K03,  K04,         K05,  K06,  K07,  K08,  K09,\
      K10,  K11,  K12,  K13,  K14,         K15,  K16,  K17,  K18,  K19,\
      K20,  K21,  K22,  K23,  K24,         K25,  K26,  K27,  K28,  K29,\
      N30,  N31,  K32,  K33,  K34,         K35,  K36,  K37,  N38,  N39\
)\
&none K00   K01   K02   K03   K04          K05   K06   K07   K08   K09   &none \
&none K10   K11   K12   K13   K14          K15   K16   K17   K18   K19   &none \
&none K20   K21   K22   K23   K24          K25   K26   K27   K28   K29   &none \
                  K32   K33   K34          K35   K36   K37
#define MIRYOKU_SUPERMAP(\
      K00,  K01,  K02,  K03,  K04,         K05,  K06,  K07,  K08,  K09,\
      K10,  K11,  K12,  K13,  K14,         K15,  K16,  K17,  K18,  K19,\
      K20,  K21,  K22,  K23,  K24,         K25,  K26,  K27,  K28,  K29,\
      N30,  N31,  K32,  K33,  K34,         K35,  K36,  K37,  N38,  N39\
)\
LALT  K00   K01   K02   K03   K04          K05   K06   K07   K08   K09   LGUI  \
LCTL  K10   K11   K12   K13   K14          K15   K16   K17   K18   K19   LCTL  \
LSFT  K20   K21   K22   K23   K24          K25   K26   K27   K28   K29   LSFT  \
                  K32   K33   K34          K35   K36   K37

#define BASE 0
#define TAP  1
#define MBO  2
#define NAVR 3
#define MOUR 4
#define MEDR 5
#define NSL  6
#define NSSL 7
#define FUNL 8

#define X_NP &none // key is not present
#define X_NA &none // present but not available for use
#define X_NU &none // available but not used

/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping_term_ms = <200>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };
  };
  keymap {
    compatible = "zmk,keymap";
      BASE_layer {
        bindings = <
#if defined MIRYOKU_ALPHAS_COLEMAK
          MIRYOKU_SUBMAP(
&kp Q,        &kp W,        &kp F,        &kp P,        &kp G,        &kp J,        &kp L,        &kp U,        &kp Y,        &kp QUOT,
&hm LGUI A,   &hm LALT R,   &hm LCTL S,   &hm LSFT T,   &kp D,        &kp H,        &hm LSFT N,   &hm LCTL E,   &hm LALT I,   &hm LGUI O,
&kp Z,        &hm RALT X,   &kp C,        &kp V,        &kp B,        &kp K,        &kp M,        &kp CMMA,     &hm RALT DOT, &kp FSLH,
X_NP,         X_NP,         &lt MEDR ESC, &lt NAVR SPC, &lt MOUR TAB, &lt NSSL RET, &lt NSL BKSP, &lt FUNL DEL, X_NP,         X_NP
          )
#elif defined MIRYOKU_ALPHAS_COLEMAKDH
          MIRYOKU_SUBMAP(
&kp Q,        &kp W,        &kp F,        &kp P,        &kp B,        &kp J,        &kp L,        &kp U,        &kp Y,        &kp QUOT,
&hm LGUI A,   &hm LALT R,   &hm LCTL S,   &hm LSFT T,   &kp G,        &kp K,        &hm LSFT N,   &hm LCTL E,   &hm LALT I,   &hm LGUI O,
&kp Z,        &hm RALT X,   &kp C,        &kp D,        &kp V,        &kp M,        &kp H,        &kp CMMA,     &hm RALT DOT, &kp FSLH,
X_NP,         X_NP,         &lt MEDR ESC, &lt NAVR SPC, &lt MOUR TAB, &lt NSSL RET, &lt NSL BKSP, &lt FUNL DEL, X_NP,         X_NP
          )
#elif defined MIRYOKU_ALPHAS_DVORAK
          MIRYOKU_SUBMAP(
&kp QUOT,     &kp CMMA,     &kp DOT,      &kp P,        &kp Y,        &kp F,        &kp G,        &kp C,        &kp R,        &kp L,
&hm LGUI A,   &hm LALT O,   &hm LCTL E,   &hm LSFT U,   &kp I,        &kp D,        &hm LSFT H,   &hm LCTL T,   &hm LALT N,   &hm LGUI S,
&kp FSLH,     &hm RALT Q,   &kp J,        &kp K,        &kp X,        &kp B,        &kp M,        &kp W,        &hm RALT V,   &kp Z,
X_NP,         X_NP,         &lt MEDR ESC, &lt NAVR SPC, &lt MOUR TAB, &lt NSSL RET, &lt NSL BKSP, &lt FUNL DEL, X_NP,         X_NP
          )
#elif defined MIRYOKU_ALPHAS_HALMAK
          MIRYOKU_SUBMAP(
&kp W,        &kp L,        &kp R,        &kp B,        &kp Z,        &kp QUOT,     &kp Q,        &kp U,        &kp D,        &kp J,
&hm LGUI S,   &hm LALT H,   &hm LCTL N,   &hm LSFT T,   &kp CMMA,     &kp DOT,      &hm LSFT A,   &hm LCTL E,   &hm LALT O,   &hm LGUI I,
&kp F,        &hm RALT M,   &kp V,        &kp C,        &kp FSLH,     &kp G,        &kp P,        &kp X,        &hm RALT K,   &kp Y,
X_NP,         X_NP,         &lt MEDR ESC, &lt NAVR SPC, &lt MOUR TAB, &lt NSSL RET, &lt NSL BKSP, &lt FUNL DEL, X_NP,         X_NP
          )
#elif defined MIRYOKU_ALPHAS_WORKMAN
          MIRYOKU_SUBMAP(
&kp Q,        &kp D,        &kp R,        &kp W,        &kp B,        &kp J,        &kp F,        &kp U,        &kp P,        &kp QUOT,
&hm LGUI A,   &hm LALT S,   &hm LCTL H,   &hm LSFT T,   &kp G,        &kp Y,        &hm LSFT N,   &hm LCTL E,   &hm LALT O,   &hm LGUI I,
&kp Z,        &hm RALT X,   &kp M,        &kp C,        &kp V,        &kp K,        &kp L,        &kp CMMA,     &hm RALT DOT, &kp FSLH,
X_NP,         X_NP,         &lt MEDR ESC, &lt NAVR SPC, &lt MOUR TAB, &lt NSSL RET, &lt NSL BKSP, &lt FUNL DEL, X_NP,         X_NP
          )
#elif defined MIRYOKU_ALPHAS_QWERTY
          MIRYOKU_SUBMAP(
&kp Q,        &kp W,        &kp E,        &kp R,        &kp T,        &kp Y,        &kp U,        &kp I,        &kp O,        &kp P,
&hm LGUI A,   &hm LALT S,   &hm LCTL D,   &hm LSFT F,   &kp G,        &kp H,        &hm LSFT J,   &hm LCTL K,   &hm LALT L,   &hm LGUI QUOT,
&kp Z,        &hm RALT X,   &kp C,        &kp V,        &kp B,        &kp N,        &kp M,        &kp CMMA,     &hm RALT DOT, &kp FSLH,
X_NP,         X_NP,         &lt MEDR ESC, &lt NAVR SPC, &lt MOUR TAB, &lt NSSL RET, &lt NSL BKSP, &lt FUNL DEL, X_NP,         X_NP
          )
#else
          MIRYOKU_SUBMAP(
&kp Q,        &kp W,        &kp F,        &kp P,        &kp B,        &kp J,        &kp L,        &kp U,        &kp Y,        &kp QUOT,
&hm LGUI A,   &hm LALT R,   &hm LCTL S,   &hm LSFT T,   &kp G,        &kp M,        &hm LSFT N,   &hm LCTL E,   &hm LALT I,   &hm LGUI O,
&kp Z,        &hm RALT X,   &kp C,        &kp D,        &kp V,        &kp K,        &kp H,        &kp CMMA,     &hm RALT DOT, &kp FSLH,
X_NP,         X_NP,         &lt MEDR ESC, &lt NAVR SPC, &lt MOUR TAB, &lt NSSL RET, &lt NSL BKSP, &lt FUNL DEL, X_NP,         X_NP
          )
#endif
        >;
      };
      TAP_layer {
        bindings = <
#if defined MIRYOKU_ALPHAS_COLEMAK
          MIRYOKU_SUPERMAP(
&kp Q,    &kp W,    &kp F,    &kp P,    &kp G,    &kp J,    &kp L,    &kp U,    &kp Y,    &kp QUOT,
&kp A,    &kp R,    &kp S,    &kp T,    &kp D,    &kp H,    &kp N,    &kp E,    &kp I,    &kp O,
&kp Z,    &kp X,    &kp C,    &kp V,    &kp B,    &kp K,    &kp M,    &kp CMMA, &kp DOT,  &kp FSLH,
X_NP,     X_NP,     &kp ESC,  &kp SPC,  &kp TAB,  &kp RET,  &kp BKSP, &kp DEL,  X_NP,     X_NP
          )
#elif defined MIRYOKU_ALPHAS_COLEMAKDH
          MIRYOKU_SUPERMAP(
&kp Q,    &kp W,    &kp F,    &kp P,    &kp B,    &kp J,    &kp L,    &kp U,    &kp Y,    &kp QUOT,
&kp A,    &kp R,    &kp S,    &kp T,    &kp G,    &kp K,    &kp N,    &kp E,    &kp I,    &kp O,
&kp Z,    &kp X,    &kp C,    &kp D,    &kp V,    &kp M,    &kp H,    &kp CMMA, &kp DOT,  &kp FSLH,
X_NP,     X_NP,     &kp ESC,  &kp SPC,  &kp TAB,  &kp RET,  &kp BKSP, &kp DEL,  X_NP,     X_NP
          )
#elif defined MIRYOKU_ALPHAS_DVORAK
          MIRYOKU_SUPERMAP(
&kp QUOT, &kp CMMA, &kp DOT,  &kp P,    &kp Y,    &kp F,    &kp G,    &kp C,    &kp R,    &kp L,
&kp A,    &kp O,    &kp E,    &kp U,    &kp I,    &kp D,    &kp H,    &kp T,    &kp N,    &kp S,
&kp FSLH, &kp Q,    &kp J,    &kp K,    &kp X,    &kp B,    &kp M,    &kp W,    &kp V,    &kp Z,
X_NP,     X_NP,     &kp ESC,  &kp SPC,  &kp TAB,  &kp RET,  &kp BKSP, &kp DEL,  X_NP,     X_NP
          )
#elif defined MIRYOKU_ALPHAS_HALMAK
          MIRYOKU_SUPERMAP(
&kp W,    &kp L,    &kp R,    &kp B,    &kp Z,    &kp QUOT, &kp Q,    &kp U,    &kp D,    &kp J,
&kp S,    &kp H,    &kp N,    &kp T,    &kp CMMA, &kp DOT,  &kp A,    &kp E,    &kp O,    &kp I,
&kp F,    &kp M,    &kp V,    &kp C,    &kp FSLH, &kp G,    &kp P,    &kp X,    &kp K,    &kp Y,
X_NP,     X_NP,     &kp ESC,  &kp SPC,  &kp TAB,  &kp RET,  &kp BKSP, &kp DEL,  X_NP,     X_NP
          )
#elif defined MIRYOKU_ALPHAS_WORKMAN
          MIRYOKU_SUPERMAP(
&kp Q,    &kp D,    &kp R,    &kp W,    &kp B,    &kp J,    &kp F,    &kp U,    &kp P,    &kp QUOT,
&kp A,    &kp S,    &kp H,    &kp T,    &kp G,    &kp Y,    &kp N,    &kp E,    &kp O,    &kp I,
&kp Z,    &kp X,    &kp M,    &kp C,    &kp V,    &kp K,    &kp L,    &kp CMMA, &kp DOT,  &kp FSLH,
X_NP,     X_NP,     &kp ESC,  &kp SPC,  &kp TAB,  &kp RET,  &kp BKSP, &kp DEL,  X_NP,     X_NP
          )
#elif defined MIRYOKU_ALPHAS_QWERTY
          MIRYOKU_SUPERMAP(
&kp Q,    &kp W,    &kp E,    &kp R,    &kp T,    &kp Y,    &kp U,    &kp I,    &kp O,    &kp P,
&kp A,    &kp S,    &kp D,    &kp F,    &kp G,    &kp H,    &kp J,    &kp K,    &kp L,    &kp QUOT,
&kp Z,    &kp X,    &kp C,    &kp V,    &kp B,    &kp N,    &kp M,    &kp CMMA, &kp DOT,  &kp FSLH,
X_NP,     X_NP,     &kp ESC,  &kp SPC,  &kp TAB,  &kp RET,  &kp BKSP, &kp DEL,  X_NP,     X_NP
          )
#else
          MIRYOKU_SUPERMAP(
&kp Q,    &kp W,    &kp F,    &kp P,    &kp B,    &kp J,    &kp L,    &kp U,    &kp Y,    &kp QUOT,
&kp A,    &kp R,    &kp S,    &kp T,    &kp G,    &kp M,    &kp N,    &kp E,    &kp I,    &kp O,
&kp Z,    &kp X,    &kp C,    &kp D,    &kp V,    &kp K,    &kp H,    &kp CMMA, &kp DOT,  &kp FSLH,
X_NP,     X_NP,     &kp ESC,  &kp SPC,  &kp TAB,  &kp RET,  &kp BKSP, &kp DEL,  X_NP,     X_NP
          )
#endif
        >;
      };
      MBO_layer {
        bindings = <
          MIRYOKU_SUBMAP(
&trans,   &trans,   &trans,   &trans,   &trans,   &trans,   &trans,   &trans,   &trans,   &trans,
&trans,   &trans,   &trans,   &trans,   &trans,   &trans,   &trans,   &trans,   &trans,   &trans,
&trans,   &trans,   &trans,   &trans,   &trans,   &trans,   &trans,   &trans,   &trans,   &trans,
X_NP,     X_NP,     &trans,   &trans,   &trans,   X_NU,     X_NU,     X_NU,     X_NP,     X_NP
          )
        >;
      };
      NAVR_layer {
        bindings = <
#if defined MIRYOKU_NAV_VI
          MIRYOKU_SUBMAP(
&bootloader, X_NA,        X_NA,        X_NA,        X_NA,        X_NU,        &kp UNDO,    &kp CUT,     &kp COPY,    &kp PSTE,
&kp LGUI,    &kp LALT,    &kp LCTL,    &kp LSFT,    X_NA,        &kp LARW,    &kp DARW,    &kp UARW,    &kp RARW,    &kp CLCK,
X_NA,        &kp RALT,    X_NA,        X_NA,        X_NA,        &kp HOME,    &kp PGDN,    &kp PGUP,    &kp END,     &kp INS,
X_NP,        X_NP,        X_NA,        X_NA,        X_NA,        &kp RET,     &kp BKSP,    &kp DEL,     X_NP,        X_NP
          )
#else
          MIRYOKU_SUBMAP(
&bootloader, X_NA,        X_NA,        X_NA,        X_NA,        X_NU,        &kp UNDO,    &kp CUT,     &kp COPY,    &kp PSTE,
&kp LGUI,    &kp LALT,    &kp LCTL,    &kp LSFT,    X_NA,        &kp CLCK,    &kp LARW,    &kp DARW,    &kp UARW,    &kp RARW,
X_NA,        &kp RALT,    X_NA,        X_NA,        X_NA,        &kp INS,     &kp HOME,    &kp PGDN,    &kp PGUP,    &kp END,
X_NP,        X_NP,        X_NA,        X_NA,        X_NA,        &kp RET,     &kp BKSP,    &kp DEL,     X_NP,        X_NP
          )
#endif
        >;
      };
      MOUR_layer {
        bindings = <
#if defined MIRYOKU_NAV_VI
          MIRYOKU_SUBMAP(
&bootloader, X_NA,        X_NA,        X_NA,        X_NA,        X_NU,        X_NU,        X_NU,        X_NU,        X_NU,
&kp LGUI,    &kp LALT,    &kp LCTL,    &kp LSFT,    X_NA,        X_NU,        X_NU,        X_NU,        X_NU,        X_NU,
X_NA,        &kp RALT,    X_NA,        X_NA,        X_NA,        X_NU,        X_NU,        X_NU,        X_NU,        X_NU,
X_NP,        X_NP,        X_NA,        X_NA,        X_NA,        X_NU,        X_NU,        X_NU,        X_NP,        X_NP
          )
#else
          MIRYOKU_SUBMAP(
&bootloader, X_NA,        X_NA,        X_NA,        X_NA,        X_NU,        X_NU,        X_NU,        X_NU,        X_NU,
&kp LGUI,    &kp LALT,    &kp LCTL,    &kp LSFT,    X_NA,        X_NU,        X_NU,        X_NU,        X_NU,        X_NU,
X_NA,        &kp RALT,    X_NA,        X_NA,        X_NA,        X_NU,        X_NU,        X_NU,        X_NU,        X_NU,
X_NP,        X_NP,        X_NA,        X_NA,        X_NA,        X_NU,        X_NU,        X_NU,        X_NP,        X_NP
          )
#endif
        >;
      };
      MEDR_layer {
        bindings = <
#if defined MIRYOKU_NAV_VI
          MIRYOKU_SUBMAP(
&bootloader, X_NA,        X_NA,        X_NA,        X_NA,        X_NU,        X_NU,        X_NU,        X_NU,        X_NU,
&kp LGUI,    &kp LALT,    &kp LCTL,    &kp LSFT,    X_NA,        &kp M_PREV,  &kp VOLD,    &kp VOLU,    &kp M_NEXT,  X_NU,
X_NA,        &kp RALT,    X_NA,        X_NA,        X_NA,        X_NU,        X_NU,        X_NU,        X_NU,        X_NU,
X_NP,        X_NP,        X_NA,        X_NA,        X_NA,        &kp M_STOP,  &kp M_PLAY,  &kp M_MUTE,  X_NP,        X_NP
          )
#else
          MIRYOKU_SUBMAP(
&bootloader, X_NA,        X_NA,        X_NA,        X_NA,        X_NU,        X_NU,        X_NU,        X_NU,        X_NU,
&kp LGUI,    &kp LALT,    &kp LCTL,    &kp LSFT,    X_NA,        X_NU,        &kp M_PREV,  &kp VOLD,    &kp VOLU,    &kp M_NEXT,
X_NA,        &kp RALT,    X_NA,        X_NA,        X_NA,        X_NU,        X_NU,        X_NU,        X_NU,        X_NU,
X_NP,        X_NP,        X_NA,        X_NA,        X_NA,        &kp M_STOP,  &kp M_PLAY,  &kp M_MUTE,  X_NP,        X_NP
          )
#endif
        >;
      };
      NSL_layer {
        bindings = <
          MIRYOKU_SUBMAP(
&kp LBKT,    &kp NUM_7,   &kp NUM_8,   &kp NUM_9,   &kp RBKT,    X_NA,        X_NA,        X_NA,        X_NA,        &bootloader,
&kp SCLN,    &kp NUM_4,   &kp NUM_5,   &kp NUM_6,   &kp EQL,     X_NA,        &kp LSFT,    &kp LCTL,    &kp LALT,    &kp LGUI,
&kp GRAV,    &kp NUM_1,   &kp NUM_2,   &kp NUM_3,   &kp BSLH,    X_NA,        X_NA,        X_NA,        &kp RALT,    X_NA,
X_NP,        X_NP,        &kp DOT,     &kp NUM_0,   &kp MINUS,   X_NA,        X_NA,        X_NA,        X_NP,        X_NP
          )
        >;
      };
      NSSL_layer {
        bindings = <
          MIRYOKU_SUBMAP(
X_NU,        X_NU,        X_NU,        X_NU,        X_NU,        X_NA,        X_NA,        X_NA,        X_NA,        &bootloader,
X_NU,        X_NU,        X_NU,        X_NU,        X_NU,        X_NA,        &kp LSFT,    &kp LCTL,    &kp LALT,    &kp LGUI,
X_NU,        X_NU,        X_NU,        X_NU,        X_NU,        X_NA,        X_NA,        X_NA,        &kp RALT,    X_NA,
X_NP,        X_NP,        X_NU,        X_NU,        X_NU,        X_NA,        X_NA,        X_NA,        X_NP,        X_NP
          )
        >;
      };
      FUNL_layer {
        bindings = <
          MIRYOKU_SUBMAP(
&kp F12,     &kp F7,      &kp F8,      &kp F9,      &kp PRSC,    X_NA,        X_NA,        X_NA,        X_NA,        &bootloader,
&kp F11,     &kp F4,      &kp F5,      &kp F6,      &kp SCLK,    X_NA,        &kp LSFT,    &kp LCTL,    &kp LALT,    &kp LGUI,
&kp F10,     &kp F1,      &kp F2,      &kp F3,      &kp PAUS,    X_NA,        X_NA,        X_NA,        &kp RALT,    X_NA,
X_NP,        X_NP,        X_NU,        &kp SPC,     &kp TAB,     X_NA,        X_NA,        X_NA,        X_NP,        X_NP
          )
        >;
      };
    };
  };
};
