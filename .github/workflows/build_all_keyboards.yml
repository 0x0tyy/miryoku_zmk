name: 'Build all keyboards'
on:
  - workflow_dispatch
jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: zmkfirmware/zmk-build-arm:2.4
    strategy:
      fail-fast: false
      matrix:
        shield:
          - corne_left
          - corne_right
          - cradio_left
          - cradio_right
          - crbn
          - eek
          - helix_left
          - helix_right
          - iris_left
          - iris_right
          - jian_left
          - jian_right
          - jorne_left
          - jorne_right
          - kyria_left
          - kyria_right
          - lily58_left
          - lily58_right
          - microdox_left
          - microdox_right
          - sofle_left
          - sofle_right
          - splitreus62_left
          - splitreus62_right
        board:
          - nice_nano
        alphas: [""]
        nav: [""]
        clipboard: [""]
        layers: [""]
        mapping: [""]
        include:
          - board: planck_rev6
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache west modules
        uses: actions/cache@v2
        env:
          cache-name: cache-zephyr-modules
        with:
          path: |
            bootloader/
            modules/
            tools/
            zephyr/
            zmk/
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('config/west.yml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
        timeout-minutes: 2
        continue-on-error: true
      - name: Initialize workspace (west init)
        run: west init -l config
      - name: Update modules (west update)
        run: west update
      - name: Export Zephyr CMake package (west zephyr-export)
        run: west zephyr-export
      - name: Process matrix
        id: variables
        run: |
          if [ -n "${{ matrix.shield }}" ]
          then
            SHIELD_ARG="-DSHIELD=${{ matrix.shield }}"
          fi
          echo "::set-output name=shield-arg::${SHIELD_ARG}"

          configfile="${GITHUB_WORKSPACE}/miryoku/config.h"
          echo "::set-output name=configfile::$configfile"

          artifact_build_name="miryoku_zmk ${{ matrix.shield }} ${{ matrix.board }}"
          for option in "alphas_${{ matrix.alphas }}" "nav_${{ matrix.nav }}" "clipboard_${{ matrix.clipboard }}" "layers_${{ matrix.layers }}" "mapping_${{ matrix.mapping }}"
          do
            case "$option" in
              *_ ) ;;
              * )
                artifact_build_name="$artifact_build_name $option"
                echo "#define MIRYOKU_"`echo "$option" | tr 'a-z' 'A-Z'` >> "$configfile"
                ;;
            esac
          done
          artifact_build_name=`echo $artifact_build_name | tr ' ' '-'`
          echo "::set-output name=artifact-build-name::$artifact_build_name"
          echo "::set-output name=artifact-generic-name::"`echo "$artifact_build_name" | sed 's/_\(left\|right\)//'`
          echo "::set-output name=artifact-dir::artifacts"
      - name: Build (west build)
        run: west build -s zmk/app -b ${{ matrix.board }} -- ${{ steps.variables.outputs.shield-arg }} -DZMK_CONFIG="${GITHUB_WORKSPACE}/config"
      - name: Prepare artifacts
        run: |
          mkdir ${{ steps.variables.outputs.artifact-dir }}
          cp "${{ steps.variables.outputs.configfile }}" "${{ steps.variables.outputs.artifact-dir }}"
          for extension in "hex" "uf2"
          do
            file="build/zephyr/zmk.$extension"
            if [ -f "$file" ]
            then
              cp "$file" "${{ steps.variables.outputs.artifact-dir }}/${{ steps.variables.outputs.artifact-build-name }}.$extension"
            fi
          done
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.variables.outputs.artifact-generic-name }}
          path: ${{ steps.variables.outputs.artifact-dir }}
        continue-on-error: true
